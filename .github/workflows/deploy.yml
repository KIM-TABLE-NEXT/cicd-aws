name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: gradlew bootJar
        run: ./gradlew bootJar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cicd-test-ecr
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


#            name: Deploy
#
#            on:
#              workflow_dispatch:
#              push:
#                branches:
#                  - maina
#
#            jobs:
#              deploy:
#                runs-on: ubuntu-latest
#                steps:
#                  - name: Checkout
#                    uses: actions/checkout@v3
#                  - name: Set up JDK 17
#                    uses: actions/setup-java@v2
#                    with:
#                      java-version: '17'
#                      distribution: 'adopt'
#                  - name: Grant execute permission for gradlew
#                    run: chmod +x ./gradlew
#                  - name: gradlew bootJar
#                    run: ./gradlew bootJar
#                  - name: copy jar to server
#                    uses: appleboy/scp-action@master
#                    with:
#                      host: ${{ secrets.SSH_HOST }}
#                      username: ec2-user
#                      key: ${{ secrets.SSH_KEY }}
#                      port: 22
#                      source: "./build/libs/*.jar"
#                      target: "~"
#                      strip_components: 2
#
#                  - name: SSH Commands
#                    uses: appleboy/ssh-action@v0.1.6
#                    with:
#                      host: ${{ secrets.SSH_HOST }}
#                      username: ec2-user
#                      key: ${{ secrets.SSH_KEY }}
#                      port: 22
#                      script_stop: true
#                      script: |
#                        kill -9 $(ps -ef | grep java | head -n 1 | awk '{print $2}')
#                        nohup java -jar *.jar